'use strict'

var mysql	= require('mysql'),
    config	= require('../config.js');

module.exports.getNewConnection = getNewConnection();
module.exports.handleDisconnect = handleDisconnect();

function getNewConnection(){
	var connection = mysql.createConnection(config.DB);

	connection.connect(function(err){
		if(err) console.log('Database connection error: ' + err);
		else console.log('Database connection successful!');
	});
	return connection;
}


function handleDisconnect() {	
 	connection = mysql.createConnection(config.DB); 	// Recreate the connection, since
                                                  		// the old one cannot be reused.
	connection.connect(function(err) {              	// The server is either down
    		if(err) {                                     	// or restarting (takes a while sometimes).
      			console.log('error when connecting to db:', err);
      			setTimeout(handleDisconnect, 2000);	// We introduce a delay before attempting to reconnect,
    		}                                     		// to avoid a hot loop, and to allow our node script to
  	});                                     		// process asynchronous requests in the meantime.
                                          			// If you're also serving http, display a 503 error.
  	connection.on('error', function(err) {
    		console.log('db error', err);
    		if(err.code === 'PROTOCOL_CONNECTION_LOST') { 	// Connection to the MySQL server is usually
      			handleDisconnect();                     // lost due to either server restart, or a
    		} else {                              		// connnection idle timeout (the wait_timeout
      			throw err;                             	// server variable configures this)
    		}
  	});
}

